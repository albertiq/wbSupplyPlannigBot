from aiogram import Bot, Dispatcher, F
from aiogram.types import CallbackQuery

from containers import Container
from logger.logger import logger
from services.menu_service import SupplyPlanningMenuService
from utils.const import CallbackName


class SupplyPlanningHandler:
    def __init__(self, dp: Dispatcher):
        @dp.callback_query(F.data == CallbackName.SUPPLY_PLANNING_CALLBACK)
        async def handle_supply_planning_command(
            callback: CallbackQuery,
            bot: Bot,
            supply_planning_service: SupplyPlanningMenuService = Container.supply_planning_service(),
        ) -> None:
            msg = await callback.message.answer("üìä –ù–∞—á–∏–Ω–∞—é —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞...")

            try:
                planned_supplies = await supply_planning_service()

                if not planned_supplies:
                    await callback.message.answer("üì≠ –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ –ø–æ—Å—Ç–∞–≤–∫–∞–º")
                    return

                await callback.message.answer_document(planned_supplies, caption="üìä –û—Ç—á–µ—Ç –ø–æ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—é –ø–æ—Å—Ç–∞–≤–æ–∫")

            except Exception as e:
                logger.exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
                await callback.message.answer("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö")

            finally:
                await bot.delete_message(chat_id=msg.chat.id, message_id=msg.message_id)
